#!/bin/bash

#================================================================
#   描    述： redis
#   Author：lee
#   Email：china2011long@163.com
#   Create Time：Sat 21 Sep 2019 02:24:52 PM CST
#
#================================================================
require "base"
require "nodeenv"
require "log"

# 安装redis
function redis_install(){
    _redis_src_path=$1
	# 程序路径
	REDIS_BIN_PATH="${NODE_GLOBAL_APP_PATH}/redis/bin"

	if [ -d $REDIS_BIN_PATH ];then
		die "redis is installed. $REDIS_BIN_PATH"
	fi

	#redis executable path
	REDIS_EXECUTABLE="${REDIS_BIN_PATH}/redis-server"
	#redis cli path
	CLI_EXEC="${REDIS_BIN_PATH}/redis-cli"

	if [ ! -f "$_redis_src_path/src/redis-server" ];then
		die "$_redis_src_path/src/redis-server no exist"
	fi

	if [ ! -f "$_redis_src_path/src/redis-cli" ];then
		die "$_redis_src_path/src/redis-cli no exist"
	fi

	mkdir -p "$REDIS_BIN_PATH" || die "Could not create redis bin directory"

	cp $_redis_src_path/src/redis-server $REDIS_EXECUTABLE
	cp $_redis_src_path/src/redis-cli $CLI_EXEC
	log_info "redis installed to $REDIS_BIN_PATH"
}

# 新建redis
function redis_new(){
	# 端口
	REDIS_PORT=$1
	# 根目录
	REDIS_ROOT_PATH="${NODE_BASE_APP_PATH}/redis_$REDIS_PORT"
	# 程序路径
	REDIS_BIN_PATH="${NODE_GLOBAL_APP_PATH}/redis/bin"
	
	#read the redis config file
	REDIS_CONFIG_FILE="${REDIS_ROOT_PATH}/redis.conf"
	
	#read the redis log file path
	REDIS_LOG_FILE="${REDIS_ROOT_PATH}/redis.log"
	
	#get the redis data directory
	REDIS_DATA_DIR="${REDIS_ROOT_PATH}"
	
	#redis executable path
	REDIS_EXECUTABLE="${REDIS_BIN_PATH}/redis-server"
	
	#redis cli path
	CLI_EXEC="${REDIS_BIN_PATH}/redis-cli"
	
	echo "Selected config:"
	
	echo "Port           : $REDIS_PORT"
	echo "Config file    : $REDIS_CONFIG_FILE"
	echo "Log file       : $REDIS_LOG_FILE"
	echo "Data dir       : $REDIS_DATA_DIR"
	echo "Executable     : $REDIS_EXECUTABLE"
	echo "Cli Executable : $CLI_EXEC"
	
	read -p "Is this ok? Then press ENTER to go on or Ctrl-C to abort." _UNUSED_
	
	mkdir -p `dirname "$REDIS_CONFIG_FILE"` || die "Could not create redis config directory"
	mkdir -p `dirname "$REDIS_LOG_FILE"` || die "Could not create redis log dir"
	mkdir -p "$REDIS_DATA_DIR" || die "Could not create redis data directory"
	
	#render the templates
	TMP_FILE="/tmp/${REDIS_PORT}.conf"
	DEFAULT_CONFIG="${SLOTH_TPL_PATH}/redis/redis.conf"
	INIT_TPL_FILE="${SLOTH_TPL_PATH}/redis/redis_init_script.tpl"
	INIT_SCRIPT_DEST="${REDIS_ROOT_PATH}/redis_${REDIS_PORT}"
	PIDFILE="${NODE_RUN_PATH}/redis_${REDIS_PORT}.pid"
	
	if [ ! -f "$DEFAULT_CONFIG" ]; then
		echo "Mmmmm... the default config is missing. Did you switch to the utils directory?"
		exit 1
	fi
	
	#Generate config file from the default config file as template
	#changing only the stuff we're controlling from this script
	echo "## Generated by util ##" > $TMP_FILE
	
	read -r SED_EXPR <<-EOF
	s#^port [0-9]{4}\$#port ${REDIS_PORT}#; \
	s#^logfile .+\$#logfile ${REDIS_LOG_FILE}#; \
	s#^dir .+\$#dir ${REDIS_DATA_DIR}#; \
	s#^pidfile .+\$#pidfile ${PIDFILE}#; \
	s#^daemonize no\$#daemonize yes#;
	EOF
	sed -r "$SED_EXPR" $DEFAULT_CONFIG  >> $TMP_FILE
	
	#cat $TPL_FILE | while read line; do eval "echo \"$line\"" >> $TMP_FILE; done
	cp $TMP_FILE $REDIS_CONFIG_FILE || die "Could not write redis config file $REDIS_CONFIG_FILE"
	
	#Generate sample script from template file
	rm -f $TMP_FILE
	
	###
	# Generate sample script from template file
	# - No need to check which system we are on. The init info are comments and
	#   do not interfere with update_rc.d systems. Additionally:
	#     Ubuntu/debian by default does not come with chkconfig, but does issue a
	#     warning if init info is not available.
	
	cat > ${TMP_FILE} <<EOT
#!/bin/sh
#Configurations injected by util below....
	
EXEC=$REDIS_EXECUTABLE
CLIEXEC=$CLI_EXEC
PIDFILE=$PIDFILE
CONF="$REDIS_CONFIG_FILE"
REDISPORT="$REDIS_PORT"
EOT
	cat ${INIT_TPL_FILE} >> ${TMP_FILE}
	
	#copy to dest
	cp $TMP_FILE $INIT_SCRIPT_DEST && \
		chmod +x $INIT_SCRIPT_DEST || die "Could not copy redis init script to  $INIT_SCRIPT_DEST"
	echo "Copied $TMP_FILE => $INIT_SCRIPT_DEST"
	
	#tada
	echo "Installation successful!"
	exit 0
}

# 批量新建redis
function redis_batch_new(){
	die "not impl"
}

# 记录 <inst_name>
function redis_tip() {
	die "not impl"
}

# 显示所有redis实例
function redis_inst_list() {
	die "not impl"
}

# 获取实例的tip <inst_name>
function redis_tip_get() {
	die "not impl"
}
